name: build
on:
  push: {}

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      STARLORD_IMAGE_TAG: starlord.inscloudgate.net/deploy/muss
    steps:
      # general setup
      - uses: actions/checkout@v2
      - name: checkout private actions
        uses: actions/checkout@v2
        with:
          repository: instructure-bridge/actions
          token: ${{ secrets.GIT_HUB_TOKEN }}
          path: .github/actions
          ref: master
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.13
      
      # build and test
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: GoReleaser Build
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: build --snapshot
      - name: Docker Build
        run: docker build --tag ${STARLORD_IMAGE_TAG}:latest .
      - name: Test
        run: make test

      # uploading for master
      - name: Configure AWS credentials
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TRUSS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TRUSS_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Login to ECR
        if: ${{ github.ref == 'refs/heads/master' }}
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Push To ECR
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          docker tag ${STARLORD_IMAGE_TAG}:latest ${{ steps.login_ecr.outputs.registry }}/muss:latest
          docker push ${{ steps.login_ecr.outputs.registry }}/muss:latest
      - name: Push To Starlord
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: ./.github/actions/starlord-push
        with:
          image: ${STARLORD_IMAGE_TAG}:latest
          aws-access-key-id: ${{ secrets.STARLORD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STARLORD_AWS_SECRET_ACCESS_KEY }}
